//Sistema de estacionamiento automatizado
//Con capacidad para 9 veehiculos
//Entrada y Salida independiente

#include <Servo.h>
Servo miservo;  // Definir un objeto
Servo miservo2; //Definir un objeto para el segundo servo
#include<Wire.h>
#include<LiquidCrystal_I2C.h>

LiquidCrystal_I2C lcd(0x27,16,2);

#define ServoM    11     //Indicar a que pin PWM se conectara 
#define ServoM2   12     //Indicar a que pin PWM se conectara
#define Bright    13     //pin vcc display
#define Exit      10      //Pin Salida
#define In        9      //Pin Entrada

#define BarLow    95       //Posicion servo "Cerrrado"
#define BarUp     180      //Posicion servo "Abierto"
#define CAPACITY    9     //Espacios disponibles del estacionamiento
#define INTEN     70       //Porcentaje de intensidad del display

//Configuracion de los pines para cada segmento
#define  segA  2
#define  segB  3
#define  segC  4
#define  segD  5
#define  segE  6
#define  segF  7
#define  segG  8

//Declarar arreglo de los segmentos para presentar los numeros (0-9)
byte segments[10] = {
  B00111111, // number 0
  B00000101, // number 1
  B01011011, // number 2
  B01010111, // number 3
  B01100101, // number 4
  B01110110, // number 5
  B01111110, // number 6
  B00000111, // number 7
  B01111111, // number 8
  B01110111 // number 9
};

void setup(){
  // Inicializacion del Display LCD de 16x2
  lcd.init();
  lcd.backlight();
  lcd.setCursor(0,0);
  lcd.print("AutomaticParking");
  lcd.setCursor (0,1);
  lcd.print("Available slots:");

  // Inicializacion de los Servomotores
  miservo.attach(ServoM);         

  pinMode(In, INPUT);             //Recibe pulso "Entrada"
  digitalWrite(In, HIGH);         //Envia señal al servo
  pinMode(segA,OUTPUT);
  pinMode(segB,OUTPUT);
  pinMode(segC,OUTPUT);
  pinMode(segD,OUTPUT);
  pinMode(segE,OUTPUT);
  pinMode(segF,OUTPUT);
  pinMode(segG,OUTPUT);
  pinMode(Bright,OUTPUT);
  analogWrite(Bright,255*INTEN/100);
  miservo.write(BarLow);    //Levanta la pluma       


  miservo2.attach(ServoM2);          

  pinMode(Exit, INPUT);           //Recibe pulso "Salida"
  digitalWrite(Exit, HIGH);       //Envia señal al servo
  pinMode(segA,OUTPUT);
  pinMode(segB,OUTPUT);
  pinMode(segC,OUTPUT);
  pinMode(segD,OUTPUT);
  pinMode(segE,OUTPUT);
  pinMode(segF,OUTPUT);
  pinMode(segG,OUTPUT);
  pinMode(Bright,OUTPUT);
  analogWrite(Bright,255*INTEN/100);
  miservo2.write(BarLow);           //Levanta la pluma

}

int  Available= 9;                    //Numero de espacios disponibles

//Validacion de las posiciones disponibles del estacionamiento
void loop(){
Display(Available);

//Entrada
if(digitalRead(In)==0)
{
  if(Available != 0){
    Available--;
    miservo.write(BarUp);   
    delay(2000);
    miservo.write(BarLow);
    }
  }
  
//Salida
if(digitalRead(Exit)==0)
{
  if(Available != CAPACITY){
    Available++;
    miservo2.write(BarUp);
    delay(2800);
    miservo2.write(BarLow);
    }
  }
}


void Display(int number){
byte segs =  segments[number];        //"~" se usa si el display de 7 segmentos es de anodo comun.
digitalWrite(segA, bitRead(segs, 0) );
digitalWrite(segB, bitRead(segs, 1) );
digitalWrite(segC, bitRead(segs, 2) );
digitalWrite(segD, bitRead(segs, 3) );
digitalWrite(segE, bitRead(segs, 4) );
digitalWrite(segF, bitRead(segs, 5) );
digitalWrite(segG, bitRead(segs, 6) );
}
